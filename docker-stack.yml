version: '3.8'
services:
  prometheus:
    image: prom/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    configs:
      - source: prometheus-config
        target: /etc/prometheus/prometheus.yml
    ports:
      - 9099:9090
    networks:
      - frontend-network
      - backend-network
    depends_on:
      - cadvisor
      - node-exporter

  node-exporter:
    image: prom/node-exporter
    ports:
      - "9101-9105:9100"
    deploy:
      mode: global
    networks:
      - frontend-network
      - backend-network

  cadvisor:
    image: google/cadvisor:latest
    ports:
      - 9559:8080
    privileged: true
    deploy:
      mode: global
    volumes:
      - type: bind
        source: /
        target: /rootfs
      - type: bind
        source: /var/run
        target: /var/run
      - type: bind
        source: /sys
        target: /sys
      - type: bind
        source: /var/lib/docker/
        target: /var/lib/docker
      - type: bind
        source: /dev/disk/
        target: /dev/disk
      - type: bind
        source: /dev/kmsg
        target: /dev/kmsg
    networks:
      - frontend-network
      - backend-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    configs:
      - source: grafana-config
        target: /etc/grafana/provisioning/datasources/datasource.yml
    environment:
     #- GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_SECURITY_ADMIN_PASSWORD=pass123#
    networks:
      - frontend-network
      - backend-network
    depends_on:
      - prometheus

  nginx:
    image:
      leebolim0701471/frontend-lb:1.0
    ports:
      - "88:80"
    depends_on:
      - frontend
    networks:
      - frontend-network
  frontend:
    image:
      frontend:latest
    ports:
      - "10001-10003:8000"
    networks:
      - frontend-network
    environment:
      PORT: 8000
      GUESTBOOK_API_ADDR: haproxy:8000
    deploy:
      replicas: 3
      mode: replicated
  haproxy:
    image:
      leebolim0701471/haproxy:6.0
    privileged: true
    ports:
      - "7999-8000:80"
      - "9000-9001:9000"
    deploy:
      replicas: 2
      mode: replicated
    depends_on:
      - backend
    networks:
      - frontend-network
      - backend-network
  backend:
    ports:
      - "8001-8003:8000"
    environment:
      PORT: 8000
      GUESTBOOK_DB_ADDR: mongo:27017
    networks:
      - backend-network
    image:
      leebolim0701471/agora-backend:2.0
    deploy:
      replicas: 3
      mode: replicated
    depends_on:
      - mongo
  mongo:
    ports:
      - "17017:27017"
    image:
      mongo:4
    networks:
      - backend-network

configs:
  grafana-config:
    file: ./grafana/datasource.yml
  prometheus-config:
    file: ./prometheus/prometheus-stack.yml

networks:
  frontend-network: 
    ipam:
        driver: default
        config:
          - subnet: 172.28.0.0/16
  backend-network:
    ipam:
        driver: default
        config:
          - subnet: 172.29.0.0/16